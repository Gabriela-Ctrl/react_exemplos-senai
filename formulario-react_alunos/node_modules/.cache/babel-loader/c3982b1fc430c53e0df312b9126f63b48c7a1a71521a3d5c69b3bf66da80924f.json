{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport '../css/style.css';\nimport minhaImagem from '../images/login.jpg';\nimport verified from '../images/verified.png';\n\n//Função principal que representa o componente do formulário\nfunction MyForm() {\n  _s();\n  //desestruturação do objeto retornado pelo hook useForm\n  //formState é um objeto que cont[ém o estado do formulário, e errors é uma propriedade desse objeto\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  //Estado local para controlar o estado do formulário\n  const [status, setStatus] = useState({\n    submittedSuccessfully: false,\n    loading: false,\n    showPassword: false\n  });\n\n  //Funçãpo que é chamada quando o formulário é enviado\n  const onSubmit = data => {\n    //{...status }: O operador de propagação (...) é utilizado para criar ima cópia do estado atual (status) Isso é feito para garantir que não estamos modificando direamente o estado anterior, respeitando o princípio de imutabilidade no React\n    setStatus({\n      ...status,\n      loading: true\n    }); //Atualiza o estado para insidcar que está carregando\n\n    //simula um tempo de espera antes de atualizar o estado para o sucesso\n    setTimeout(() => {\n      setStatus({\n        submittedSuccessfully: true,\n        loading: false\n      });\n    }, 1000);\n  };\n}\n_s(MyForm, \"GI33Y6siHCdk37vkoQ7azNf1EOk=\", false, function () {\n  return [useForm];\n});\n_c = MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["React","useState","useForm","minhaImagem","verified","MyForm","_s","register","handleSubmit","formState","errors","status","setStatus","submittedSuccessfully","loading","showPassword","onSubmit","data","setTimeout","_c","$RefreshReg$"],"sources":["C:/Users/DEV_2ano_2024/Documents/GitHub/react_exemplos-senai/formulario-react_alunos/src/components/forms/form.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport '../css/style.css';\nimport minhaImagem from '../images/login.jpg';\nimport verified from '../images/verified.png';\n\n//Função principal que representa o componente do formulário\nfunction MyForm() {\n    //desestruturação do objeto retornado pelo hook useForm\n    //formState é um objeto que cont[ém o estado do formulário, e errors é uma propriedade desse objeto\n    const { register, handleSubmit, formState: { errors } } =useForm();\n    //Estado local para controlar o estado do formulário\n    const [status, setStatus] = useState({ submittedSuccessfully: false, loading: false, showPassword: false });\n\n    //Funçãpo que é chamada quando o formulário é enviado\n    const onSubmit = data => {\n        //{...status }: O operador de propagação (...) é utilizado para criar ima cópia do estado atual (status) Isso é feito para garantir que não estamos modificando direamente o estado anterior, respeitando o princípio de imutabilidade no React\n        setStatus({...status, loading: true}); //Atualiza o estado para insidcar que está carregando\n\n        //simula um tempo de espera antes de atualizar o estado para o sucesso\n        setTimeout(() => {\n            setStatus({ submittedSuccessfully: true, loading: false });\n        }, 1000);\n    };\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAO,kBAAkB;AACzB,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;;AAE7C;AACA,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd;EACA;EACA,MAAM;IAAEC,QAAQ;IAAEC,YAAY;IAAEC,SAAS,EAAE;MAAEC;IAAO;EAAE,CAAC,GAAER,OAAO,CAAC,CAAC;EAClE;EACA,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC;IAAEY,qBAAqB,EAAE,KAAK;IAAEC,OAAO,EAAE,KAAK;IAAEC,YAAY,EAAE;EAAM,CAAC,CAAC;;EAE3G;EACA,MAAMC,QAAQ,GAAGC,IAAI,IAAI;IACrB;IACAL,SAAS,CAAC;MAAC,GAAGD,MAAM;MAAEG,OAAO,EAAE;IAAI,CAAC,CAAC,CAAC,CAAC;;IAEvC;IACAI,UAAU,CAAC,MAAM;MACbN,SAAS,CAAC;QAAEC,qBAAqB,EAAE,IAAI;QAAEC,OAAO,EAAE;MAAM,CAAC,CAAC;IAC9D,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC;AACL;AAACR,EAAA,CAjBQD,MAAM;EAAA,QAG8CH,OAAO;AAAA;AAAAiB,EAAA,GAH3Dd,MAAM;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}